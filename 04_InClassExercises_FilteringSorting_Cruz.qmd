---
title: "In Class Exercises - Sorting and Filtering"
author: "Elizabeth Cruz"
date: "`r format(Sys.time(), '%B %d, %Y')`"
format:
  html:
    self-contained: true
    toc: true
    toc-location: left
---

## Setup and Loading Data

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)

# Load the packages we'll need
# Remember, think of this like packing for our trip
# (We don't take the whole closet, only what we need)
library(tidyverse)
library(lubridate)

```

Run this line below load the data for this assignment. It will load a dataframe called "impeach," containing U.S. House Democrats and whether they supported the first impeachment of Pres. Trump, along with when they announced such support.

```{r}

impeach <- read_csv("https://docs.google.com/spreadsheets/d/e/2PACX-1vRh8d5JaDqBtByzNw2JZF3idaACobDhhk-p7chJoktA0HawELHFOvjQOqCpzGA4MGONvPlR7GASqW-K/pub?gid=1765341510&single=true&output=csv")


```

Let's see what we have:

```{r}

impeach


```

## Exercise Questions

*For the questions below, write your R code to return the requested records in the code chunk provided.*

1) The column "for_impeachment" indicates whether the member has publicly called for an impeachment inquiry. Filter to return only the ones where the answer is NO.

```{r}

impeach %>% 
  filter(for_impeachment == "NO")

# For this question, I used the %>% command to make the commands more simple in order to build off of this command and set it up well for other questions. 


```

2) Filter to return only results where a member is both against impeachment, and comes from a district that President Trump won in 2016 (which is noted in the "p16winningparty" column).

```{r}



impeach %>% 
filter(for_impeachment == "NO", p16winningparty == "R")
#  I saw notes on how to add multiple filters for one table, I put in a comma to separate the different filters and used the '==' to pick just the Republicans from 2016. 
```

3) Filter for only results where a member is against impeachment, comes from a district that President Trump won in 2016 (which is noted in the "p16winningparty" column), and also comes from a district that Mitt Romney won in 2012 ("p12winningparty").

```{r}
impeach %>% 
  filter(for_impeachment == "NO", p16winningparty == "R", p12winningparty == "R")


```

4) Filter for only results from September 2019 where a member is a YES for impeachment.

```{r}
impeach %>% 
  filter(for_impeachment == "YES", date_month == 9, date_year == 2019)
# Similar to the question before, I used the %>% (pipe) command to select the data set and the filter I wanted to use, this time selecting those who agree with the impeachment. After, I used the date_month and date_year columns to only select those from September 2019. 



```

5) Filter for only results where a member is a YES for impeachment and is from a district where Clinton won more than 70 percent of the vote in 2016 (found in column "clinton_percent").

```{r}

impeach %>% 
  filter(for_impeachment == "YES", clinton_percent > 70)

# For this question, I used a comma to build off of the initial filter command. This was similar to what I did for the second question. 


```

6) Sort the entire dataframe based on the percentage of a district that has a
bachelor's degree or higher ("pct_bachelors"), from lowest to highest.

```{r}
impeach %>%
  arrange(pct_bachelors)

# For this question I saw that the arrange was used for sorting and I was able to complete it  successfully from lowest to highest for the entire dataframe. 

```

7) Sort the just those who are NO on impeachment based on the percentage of a district that has a bachelor's degree or higher ("pct_bachelors"), from lowest to highest.

```{r}
impeach %>% 
  filter(for_impeachment == "NO") %>%
  arrange(pct_bachelors)

# For this question I looked back at the previous code and added the sorting for the bachelor's degrees onto it by using the pipe command to create a larger line of code. 

```

8) Sort the just those who are NO on impeachment based on the percentage of a district that has a bachelor's degree or higher ("pct_bachelors"), from lowest to highest.

Then filter those records by only those whose bachelor's percentage is below the national average (found in the "pct_bachelors_compared_to_national" column).

```{r}
impeach %>% 
  filter(for_impeachment == "NO") %>%
  arrange(pct_bachelors) %>%
  filter(pct_bachelors_compared_to_national == "BELOW")

```

9) Filter for only members from New Jersey who are NO on impeachment.

```{r}
impeach %>% 
  filter(state == "NJ") %>% 
  filter(for_impeachment == "NO")

# During this question, I looked at what column for the state that a House member was from and how NJ was represented (that being NJ) and then out of those filtering out only the ones that are against impeachment. The order here was  important to take account of before completing the line of code.


```

10) Filter for those who were YES on impeachment, with a declared date prior to 2019. So only those with dates before 2019. Then sort those so that the highest Clinton vote percentages are at the top.

```{r}
impeach %>%
  filter(for_impeachment == "YES", date_year < 2019) %>% 
  arrange(desc(clinton_percent))

# For this question, first I filtered the dataset for the impeachment, after I only selected those with a declared date prior to 2019 by using the date_year category. Then, I made sure  to do the descending command along with the arrange command in order to sort it by the highest Clinton cote percentages on top




```
